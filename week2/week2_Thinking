😀😀About TypeScript😀😀


🥰 TypeScript는 무엇인가?

타입스크립트는 마이크로소프트에서 개발한 오픈소스 프로그래밍 언어입니다.

타입스크립트는 언어를 명명한 이름 그대로, 자바스크립트에 타입을 부여한 언어입니다. 즉, 자바스크립트에서 확장된 언어입니다.

타입스크립트가 개발하게 된 이유는 자바스크립트로 대규모 프로젝트를 진행할 때, 헷갈리고 불편하다는 느낌을 주면서 이를 해결하고자 탄생되었습니다. 

기존의 자바스크립트에서 파생된 언어이기 때문에 문법을 그대로 이어서 사용할 수 있습니다. 추가로 기존 자바스크립트 엔진에서 별도 문법 변환 도구인 트랜스파일러없이도 실행이 가능합니다.

자바스크립트와의 차이점은 타입스크립트는 브라우저에서 실행하기 위해 파일을 한 번 변환하는 컴파일 과정이 필요하다는 것입니다.

* 타입이란? boolean, number, string과 같이 어떤 값에 대한 성질을 이야기 합니다.


🥰 TypeScript를 이용한 개발을 꼭 해야 할까?

타입스크립트를 이용할 때의 장점을 봅시다!

자바스크립트는 동적 타입 언어이고 컴파일 과정이 빠지기 때문에 런타임 속도는 빠르지만 "타입 안정성"이 부족합니다.

예를 들어 A = 100, B = 200이라고 했을 때,

변수 A + B에 대하여 자바스크립트에서는 A와 B의 타입을 모르기 때문에 개발자는 A와 B를 string 값으로 보고 100200의 결과값을 기대했지만, 실제 결과값은 300이라고 나올 수 있습니다.

하지만, 타입 스크립트를 이용할 경우에는 "A: number, B: number" 이렇게 타입을 가시적으로 지정해주기 때문에 자바스크립트와 동일한 혼동을 겪지 않습니다. 

이는 작게 굴러가는 프로젝트를 제작할 경우에는 오류를 찾기 쉽기에 큰 문제가 되지 않지만,

장기간의 규모가 있는 프로젝트를 진행하게될 경우에는 어디에서 오류가 났는지, 어떤 변수가 잘못 읽히고 있진 않은지 알기 어렵기 때문에 타입스크립트를 사용하는 것이 안정성을 보장하는 방법일 수 있습니다. 



🥰 TypeScript를 이용한 개발에서 중요한 것은 무엇이 있을까?

타입스크립트의 단점으로는 코드의 줄이 상대적으로 길어진다는 것입니다. 자바스크립트가 간결하고 깔끔해보이는 이유는 이런 타입을 따로 지정하지 않기 때문(제 생각..)이기도 한데,

타입스크립트로 작성할 경우 선언할 때마다 타입을 지정해야하기 때문에 (모두 다 지정해줄 필요가 없긴하지만 그래도...) 가독성이 떨어질 수 있습니다.

따라서 타입스크립트를 이용한 개발을 할 때에는, 흐름을 읽히는 데에 타입들이 방해가 되지 않도록 코드들 간의 위치 조정과 같이 가독성을 신경쓰는 것이 중요하다고 생각합니다.


결론 : 타입스크립트도 공부하자.
